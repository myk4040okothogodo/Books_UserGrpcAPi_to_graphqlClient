// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/books/books.proto

/*
Package books is a generated protocol buffer package.

It is generated from these files:
	proto/books/books.proto
	proto/books/books_messages.proto

It has these top-level messages:
	ListBooksRequest
	ListBooksResponse
	GetBookRequest
	GetBookResponse
	GetBooksRequest
	GetBooksResponse
	GetBookByISBNRequest
	GetBookByISBNResponse
	AddBookRequest
	AddBookResponse
	DeleteBookRequest
	DeleteBookResponse
	Book
*/
package books

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListBooksRequest struct {
}

func (m *ListBooksRequest) Reset()                    { *m = ListBooksRequest{} }
func (m *ListBooksRequest) String() string            { return proto.CompactTextString(m) }
func (*ListBooksRequest) ProtoMessage()               {}
func (*ListBooksRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ListBooksResponse struct {
	Books []*Book `protobuf:"bytes,1,rep,name=books" json:"books,omitempty"`
}

func (m *ListBooksResponse) Reset()                    { *m = ListBooksResponse{} }
func (m *ListBooksResponse) String() string            { return proto.CompactTextString(m) }
func (*ListBooksResponse) ProtoMessage()               {}
func (*ListBooksResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListBooksResponse) GetBooks() []*Book {
	if m != nil {
		return m.Books
	}
	return nil
}

type GetBookRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetBookRequest) Reset()                    { *m = GetBookRequest{} }
func (m *GetBookRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBookRequest) ProtoMessage()               {}
func (*GetBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetBookRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetBookResponse struct {
	Book *Book `protobuf:"bytes,1,opt,name=book" json:"book,omitempty"`
}

func (m *GetBookResponse) Reset()                    { *m = GetBookResponse{} }
func (m *GetBookResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBookResponse) ProtoMessage()               {}
func (*GetBookResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetBookResponse) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

type GetBooksRequest struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *GetBooksRequest) Reset()                    { *m = GetBooksRequest{} }
func (m *GetBooksRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBooksRequest) ProtoMessage()               {}
func (*GetBooksRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetBooksRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetBooksResponse struct {
	Books []*Book `protobuf:"bytes,1,rep,name=books" json:"books,omitempty"`
}

func (m *GetBooksResponse) Reset()                    { *m = GetBooksResponse{} }
func (m *GetBooksResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBooksResponse) ProtoMessage()               {}
func (*GetBooksResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetBooksResponse) GetBooks() []*Book {
	if m != nil {
		return m.Books
	}
	return nil
}

type GetBookByISBNRequest struct {
	Isbn string `protobuf:"bytes,1,opt,name=isbn" json:"isbn,omitempty"`
}

func (m *GetBookByISBNRequest) Reset()                    { *m = GetBookByISBNRequest{} }
func (m *GetBookByISBNRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBookByISBNRequest) ProtoMessage()               {}
func (*GetBookByISBNRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetBookByISBNRequest) GetIsbn() string {
	if m != nil {
		return m.Isbn
	}
	return ""
}

type GetBookByISBNResponse struct {
	Book *Book `protobuf:"bytes,1,opt,name=book" json:"book,omitempty"`
}

func (m *GetBookByISBNResponse) Reset()                    { *m = GetBookByISBNResponse{} }
func (m *GetBookByISBNResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBookByISBNResponse) ProtoMessage()               {}
func (*GetBookByISBNResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetBookByISBNResponse) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

type AddBookRequest struct {
	Book *Book `protobuf:"bytes,1,opt,name=book" json:"book,omitempty"`
}

func (m *AddBookRequest) Reset()                    { *m = AddBookRequest{} }
func (m *AddBookRequest) String() string            { return proto.CompactTextString(m) }
func (*AddBookRequest) ProtoMessage()               {}
func (*AddBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AddBookRequest) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

type AddBookResponse struct {
	Book *Book `protobuf:"bytes,1,opt,name=book" json:"book,omitempty"`
}

func (m *AddBookResponse) Reset()                    { *m = AddBookResponse{} }
func (m *AddBookResponse) String() string            { return proto.CompactTextString(m) }
func (*AddBookResponse) ProtoMessage()               {}
func (*AddBookResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AddBookResponse) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

type DeleteBookRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteBookRequest) Reset()                    { *m = DeleteBookRequest{} }
func (m *DeleteBookRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteBookRequest) ProtoMessage()               {}
func (*DeleteBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeleteBookRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteBookResponse struct {
}

func (m *DeleteBookResponse) Reset()                    { *m = DeleteBookResponse{} }
func (m *DeleteBookResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteBookResponse) ProtoMessage()               {}
func (*DeleteBookResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func init() {
	proto.RegisterType((*ListBooksRequest)(nil), "tutorial.grpc.books.v1.ListBooksRequest")
	proto.RegisterType((*ListBooksResponse)(nil), "tutorial.grpc.books.v1.ListBooksResponse")
	proto.RegisterType((*GetBookRequest)(nil), "tutorial.grpc.books.v1.GetBookRequest")
	proto.RegisterType((*GetBookResponse)(nil), "tutorial.grpc.books.v1.GetBookResponse")
	proto.RegisterType((*GetBooksRequest)(nil), "tutorial.grpc.books.v1.GetBooksRequest")
	proto.RegisterType((*GetBooksResponse)(nil), "tutorial.grpc.books.v1.GetBooksResponse")
	proto.RegisterType((*GetBookByISBNRequest)(nil), "tutorial.grpc.books.v1.GetBookByISBNRequest")
	proto.RegisterType((*GetBookByISBNResponse)(nil), "tutorial.grpc.books.v1.GetBookByISBNResponse")
	proto.RegisterType((*AddBookRequest)(nil), "tutorial.grpc.books.v1.AddBookRequest")
	proto.RegisterType((*AddBookResponse)(nil), "tutorial.grpc.books.v1.AddBookResponse")
	proto.RegisterType((*DeleteBookRequest)(nil), "tutorial.grpc.books.v1.DeleteBookRequest")
	proto.RegisterType((*DeleteBookResponse)(nil), "tutorial.grpc.books.v1.DeleteBookResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BooksAPI service

type BooksAPIClient interface {
	// Get all books
	ListBooks(ctx context.Context, in *ListBooksRequest, opts ...grpc.CallOption) (*ListBooksResponse, error)
	// Get book by id
	GetBook(ctx context.Context, in *GetBookRequest, opts ...grpc.CallOption) (*GetBookResponse, error)
	// Get books by ids
	GetBooks(ctx context.Context, in *GetBooksRequest, opts ...grpc.CallOption) (*GetBooksResponse, error)
	// Get book by title
	GetBookByISBN(ctx context.Context, in *GetBookByISBNRequest, opts ...grpc.CallOption) (*GetBookByISBNResponse, error)
	// Add new book
	AddBook(ctx context.Context, in *AddBookRequest, opts ...grpc.CallOption) (*AddBookResponse, error)
	// Delete book
	DeleteBook(ctx context.Context, in *DeleteBookRequest, opts ...grpc.CallOption) (*DeleteBookResponse, error)
}

type booksAPIClient struct {
	cc *grpc.ClientConn
}

func NewBooksAPIClient(cc *grpc.ClientConn) BooksAPIClient {
	return &booksAPIClient{cc}
}

func (c *booksAPIClient) ListBooks(ctx context.Context, in *ListBooksRequest, opts ...grpc.CallOption) (*ListBooksResponse, error) {
	out := new(ListBooksResponse)
	err := grpc.Invoke(ctx, "/tutorial.grpc.books.v1.BooksAPI/ListBooks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *booksAPIClient) GetBook(ctx context.Context, in *GetBookRequest, opts ...grpc.CallOption) (*GetBookResponse, error) {
	out := new(GetBookResponse)
	err := grpc.Invoke(ctx, "/tutorial.grpc.books.v1.BooksAPI/GetBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *booksAPIClient) GetBooks(ctx context.Context, in *GetBooksRequest, opts ...grpc.CallOption) (*GetBooksResponse, error) {
	out := new(GetBooksResponse)
	err := grpc.Invoke(ctx, "/tutorial.grpc.books.v1.BooksAPI/GetBooks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *booksAPIClient) GetBookByISBN(ctx context.Context, in *GetBookByISBNRequest, opts ...grpc.CallOption) (*GetBookByISBNResponse, error) {
	out := new(GetBookByISBNResponse)
	err := grpc.Invoke(ctx, "/tutorial.grpc.books.v1.BooksAPI/GetBookByISBN", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *booksAPIClient) AddBook(ctx context.Context, in *AddBookRequest, opts ...grpc.CallOption) (*AddBookResponse, error) {
	out := new(AddBookResponse)
	err := grpc.Invoke(ctx, "/tutorial.grpc.books.v1.BooksAPI/AddBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *booksAPIClient) DeleteBook(ctx context.Context, in *DeleteBookRequest, opts ...grpc.CallOption) (*DeleteBookResponse, error) {
	out := new(DeleteBookResponse)
	err := grpc.Invoke(ctx, "/tutorial.grpc.books.v1.BooksAPI/DeleteBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BooksAPI service

type BooksAPIServer interface {
	// Get all books
	ListBooks(context.Context, *ListBooksRequest) (*ListBooksResponse, error)
	// Get book by id
	GetBook(context.Context, *GetBookRequest) (*GetBookResponse, error)
	// Get books by ids
	GetBooks(context.Context, *GetBooksRequest) (*GetBooksResponse, error)
	// Get book by title
	GetBookByISBN(context.Context, *GetBookByISBNRequest) (*GetBookByISBNResponse, error)
	// Add new book
	AddBook(context.Context, *AddBookRequest) (*AddBookResponse, error)
	// Delete book
	DeleteBook(context.Context, *DeleteBookRequest) (*DeleteBookResponse, error)
}

func RegisterBooksAPIServer(s *grpc.Server, srv BooksAPIServer) {
	s.RegisterService(&_BooksAPI_serviceDesc, srv)
}

func _BooksAPI_ListBooks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBooksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksAPIServer).ListBooks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.grpc.books.v1.BooksAPI/ListBooks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksAPIServer).ListBooks(ctx, req.(*ListBooksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BooksAPI_GetBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksAPIServer).GetBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.grpc.books.v1.BooksAPI/GetBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksAPIServer).GetBook(ctx, req.(*GetBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BooksAPI_GetBooks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBooksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksAPIServer).GetBooks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.grpc.books.v1.BooksAPI/GetBooks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksAPIServer).GetBooks(ctx, req.(*GetBooksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BooksAPI_GetBookByISBN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBookByISBNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksAPIServer).GetBookByISBN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.grpc.books.v1.BooksAPI/GetBookByISBN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksAPIServer).GetBookByISBN(ctx, req.(*GetBookByISBNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BooksAPI_AddBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksAPIServer).AddBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.grpc.books.v1.BooksAPI/AddBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksAPIServer).AddBook(ctx, req.(*AddBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BooksAPI_DeleteBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksAPIServer).DeleteBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.grpc.books.v1.BooksAPI/DeleteBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksAPIServer).DeleteBook(ctx, req.(*DeleteBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BooksAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tutorial.grpc.books.v1.BooksAPI",
	HandlerType: (*BooksAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListBooks",
			Handler:    _BooksAPI_ListBooks_Handler,
		},
		{
			MethodName: "GetBook",
			Handler:    _BooksAPI_GetBook_Handler,
		},
		{
			MethodName: "GetBooks",
			Handler:    _BooksAPI_GetBooks_Handler,
		},
		{
			MethodName: "GetBookByISBN",
			Handler:    _BooksAPI_GetBookByISBN_Handler,
		},
		{
			MethodName: "AddBook",
			Handler:    _BooksAPI_AddBook_Handler,
		},
		{
			MethodName: "DeleteBook",
			Handler:    _BooksAPI_DeleteBook_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/books/books.proto",
}

func init() { proto.RegisterFile("proto/books/books.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x6d, 0x4b, 0xc2, 0x40,
	0x1c, 0xc7, 0x87, 0x52, 0xff, 0x91, 0x0f, 0x7f, 0xac, 0x64, 0xf4, 0x62, 0x5c, 0x50, 0x4b, 0x6a,
	0x95, 0x7d, 0x02, 0x67, 0x24, 0x42, 0x44, 0xac, 0x77, 0x42, 0x94, 0xba, 0x43, 0x46, 0xe6, 0xcc,
	0x3b, 0x83, 0xbe, 0x68, 0x9f, 0x27, 0x76, 0x77, 0x4e, 0xa7, 0xad, 0xad, 0x7c, 0x23, 0xc7, 0xdd,
	0xef, 0xe1, 0xfe, 0xbf, 0xfb, 0x39, 0x38, 0x98, 0x4c, 0x3d, 0xee, 0x5d, 0xf4, 0x3d, 0xef, 0x95,
	0xc9, 0x5f, 0x53, 0xec, 0xe0, 0x3e, 0x9f, 0x71, 0x6f, 0xea, 0xf6, 0x46, 0xe6, 0x70, 0x3a, 0x19,
	0x98, 0xf2, 0xe8, 0xe3, 0x4a, 0xd3, 0xd7, 0x08, 0xcf, 0x6f, 0x94, 0xb1, 0xde, 0x90, 0x2a, 0x26,
	0x41, 0x28, 0xdf, 0xb9, 0x8c, 0x5b, 0xfe, 0x99, 0x4d, 0xdf, 0x67, 0x94, 0x71, 0xd2, 0x86, 0xca,
	0xd2, 0x1e, 0x9b, 0x78, 0x63, 0x46, 0xb1, 0x01, 0x5b, 0x42, 0xa0, 0x96, 0xd2, 0x33, 0xc6, 0x4e,
	0xe3, 0xd0, 0xfc, 0xd9, 0xd2, 0xf4, 0x59, 0xb6, 0x84, 0x12, 0x1d, 0x8a, 0x6d, 0x2a, 0x74, 0x94,
	0x34, 0x16, 0x21, 0xed, 0x3a, 0xb5, 0x94, 0x9e, 0x32, 0x0a, 0x76, 0xda, 0x75, 0x48, 0x0b, 0x4a,
	0x01, 0x42, 0x19, 0x5d, 0x42, 0xd6, 0x67, 0x0b, 0x50, 0x9c, 0x8f, 0x40, 0x92, 0xa3, 0x40, 0x64,
	0x3e, 0x02, 0x96, 0x21, 0xe3, 0x3a, 0xf2, 0xae, 0x05, 0xdb, 0x5f, 0x92, 0x5b, 0x28, 0x2f, 0x40,
	0x1b, 0xcc, 0x54, 0x87, 0xaa, 0xd2, 0xb1, 0x3e, 0x3b, 0x8f, 0xd6, 0xfd, 0xdc, 0x11, 0x21, 0xeb,
	0xb2, 0xfe, 0x58, 0xcd, 0x26, 0xd6, 0xa4, 0x03, 0x7b, 0x2b, 0xd8, 0x7f, 0xcf, 0x68, 0x41, 0xb1,
	0xe9, 0x38, 0xcb, 0x51, 0xfe, 0x5d, 0xa3, 0x05, 0xa5, 0x40, 0x63, 0x83, 0xb0, 0x2b, 0x37, 0x74,
	0x44, 0x39, 0xfd, 0xed, 0x59, 0xab, 0x80, 0xcb, 0x20, 0x69, 0xd6, 0xf8, 0xca, 0x42, 0x5e, 0x3c,
	0x40, 0xf3, 0xa1, 0x83, 0x2f, 0x50, 0x08, 0x4a, 0x86, 0x46, 0x94, 0xf1, 0x6a, 0x37, 0xb5, 0xd3,
	0x04, 0x48, 0x35, 0x5b, 0x17, 0x72, 0x2a, 0x7d, 0x3c, 0x8e, 0x62, 0x85, 0xeb, 0xa9, 0x9d, 0xc4,
	0xe2, 0x94, 0xf6, 0x13, 0xe4, 0xe7, 0x6d, 0xc2, 0x38, 0x52, 0x70, 0x77, 0x23, 0x1e, 0xa8, 0xe4,
	0x47, 0xb0, 0x1b, 0x2a, 0x0e, 0x9e, 0xc5, 0x50, 0x43, 0x5d, 0xd4, 0xce, 0x13, 0xa2, 0x17, 0x41,
	0xa9, 0x5e, 0x44, 0x07, 0x15, 0x2e, 0x5f, 0x74, 0x50, 0xab, 0x05, 0x1b, 0x00, 0x2c, 0x9a, 0x80,
	0x91, 0xaf, 0xb7, 0x56, 0x29, 0xad, 0x9e, 0x04, 0x2a, 0x4d, 0xac, 0x5c, 0x57, 0xfe, 0x39, 0xfb,
	0xdb, 0xe2, 0xa3, 0x76, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x98, 0xf7, 0x74, 0x29, 0x05,
	0x00, 0x00,
}
