// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/books/books_messages.proto

package books

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Book struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Author string `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Title  string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Isbn   string `protobuf:"bytes,4,opt,name=isbn" json:"isbn,omitempty"`
}

func (m *Book) Reset()                    { *m = Book{} }
func (m *Book) String() string            { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()               {}
func (*Book) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Book) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Book) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Book) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Book) GetIsbn() string {
	if m != nil {
		return m.Isbn
	}
	return ""
}

func init() {
	proto.RegisterType((*Book)(nil), "tutorial.grpc.books.v1.Book")
}

func init() { proto.RegisterFile("proto/books/books_messages.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xca, 0xcf, 0xcf, 0x2e, 0x86, 0x90, 0xf1, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9,
	0xa9, 0xc5, 0x7a, 0x60, 0x29, 0x21, 0xb1, 0x92, 0xd2, 0x92, 0xfc, 0xa2, 0xcc, 0xc4, 0x1c, 0xbd,
	0xf4, 0xa2, 0x82, 0x64, 0x3d, 0xb0, 0x1a, 0xbd, 0x32, 0x43, 0xa5, 0x08, 0x2e, 0x16, 0xa7, 0xfc,
	0xfc, 0x6c, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0xa6,
	0xcc, 0x14, 0x21, 0x31, 0x2e, 0xb6, 0xc4, 0xd2, 0x92, 0x8c, 0xfc, 0x22, 0x09, 0x26, 0xb0, 0x18,
	0x94, 0x27, 0x24, 0xc2, 0xc5, 0x5a, 0x92, 0x59, 0x92, 0x93, 0x2a, 0xc1, 0x0c, 0x16, 0x86, 0x70,
	0x84, 0x84, 0xb8, 0x58, 0x32, 0x8b, 0x93, 0xf2, 0x24, 0x58, 0xc0, 0x82, 0x60, 0xb6, 0x13, 0x7b,
	0x14, 0x2b, 0xd8, 0x96, 0x24, 0x36, 0xb0, 0x0b, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1d,
	0x84, 0x6c, 0x6a, 0xa5, 0x00, 0x00, 0x00,
}
